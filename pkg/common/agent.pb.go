// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: pkg/common/proto/agent.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerStatus_Availability int32

const (
	PlayerStatus_AVAILABLE PlayerStatus_Availability = 0
	PlayerStatus_DRAFTED   PlayerStatus_Availability = 1
	PlayerStatus_ON_HOLD   PlayerStatus_Availability = 2
)

// Enum value maps for PlayerStatus_Availability.
var (
	PlayerStatus_Availability_name = map[int32]string{
		0: "AVAILABLE",
		1: "DRAFTED",
		2: "ON_HOLD",
	}
	PlayerStatus_Availability_value = map[string]int32{
		"AVAILABLE": 0,
		"DRAFTED":   1,
		"ON_HOLD":   2,
	}
)

func (x PlayerStatus_Availability) Enum() *PlayerStatus_Availability {
	p := new(PlayerStatus_Availability)
	*p = x
	return p
}

func (x PlayerStatus_Availability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStatus_Availability) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_common_proto_agent_proto_enumTypes[0].Descriptor()
}

func (PlayerStatus_Availability) Type() protoreflect.EnumType {
	return &file_pkg_common_proto_agent_proto_enumTypes[0]
}

func (x PlayerStatus_Availability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStatus_Availability.Descriptor instead.
func (PlayerStatus_Availability) EnumDescriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{4, 0}
}

type Bot_Source int32

const (
	Bot_LOCAL  Bot_Source = 0
	Bot_REMOTE Bot_Source = 1
)

// Enum value maps for Bot_Source.
var (
	Bot_Source_name = map[int32]string{
		0: "LOCAL",
		1: "REMOTE",
	}
	Bot_Source_value = map[string]int32{
		"LOCAL":  0,
		"REMOTE": 1,
	}
)

func (x Bot_Source) Enum() *Bot_Source {
	p := new(Bot_Source)
	*p = x
	return p
}

func (x Bot_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bot_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_common_proto_agent_proto_enumTypes[1].Descriptor()
}

func (Bot_Source) Type() protoreflect.EnumType {
	return &file_pkg_common_proto_agent_proto_enumTypes[1]
}

func (x Bot_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bot_Source.Descriptor instead.
func (Bot_Source) EnumDescriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{5, 0}
}

type FantasyTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner                 string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	CurrentWaiverPriority uint32 `protobuf:"varint,4,opt,name=current_waiver_priority,json=currentWaiverPriority,proto3" json:"current_waiver_priority,omitempty"`
}

func (x *FantasyTeam) Reset() {
	*x = FantasyTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FantasyTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FantasyTeam) ProtoMessage() {}

func (x *FantasyTeam) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FantasyTeam.ProtoReflect.Descriptor instead.
func (*FantasyTeam) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *FantasyTeam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FantasyTeam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FantasyTeam) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *FantasyTeam) GetCurrentWaiverPriority() uint32 {
	if x != nil {
		return x.CurrentWaiverPriority
	}
	return 0
}

type LeagueSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumTeams           uint32        `protobuf:"varint,1,opt,name=num_teams,json=numTeams,proto3" json:"num_teams,omitempty"`
	SlotsPerTeam       []*PlayerSlot `protobuf:"bytes,2,rep,name=slots_per_team,json=slotsPerTeam,proto3" json:"slots_per_team,omitempty"`
	IsSnakeDraft       bool          `protobuf:"varint,3,opt,name=is_snake_draft,json=isSnakeDraft,proto3" json:"is_snake_draft,omitempty"`
	TotalRounds        uint32        `protobuf:"varint,4,opt,name=total_rounds,json=totalRounds,proto3" json:"total_rounds,omitempty"`
	PointsPerReception float32       `protobuf:"fixed32,5,opt,name=points_per_reception,json=pointsPerReception,proto3" json:"points_per_reception,omitempty"`
	Year               uint32        `protobuf:"varint,6,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *LeagueSettings) Reset() {
	*x = LeagueSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeagueSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeagueSettings) ProtoMessage() {}

func (x *LeagueSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeagueSettings.ProtoReflect.Descriptor instead.
func (*LeagueSettings) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *LeagueSettings) GetNumTeams() uint32 {
	if x != nil {
		return x.NumTeams
	}
	return 0
}

func (x *LeagueSettings) GetSlotsPerTeam() []*PlayerSlot {
	if x != nil {
		return x.SlotsPerTeam
	}
	return nil
}

func (x *LeagueSettings) GetIsSnakeDraft() bool {
	if x != nil {
		return x.IsSnakeDraft
	}
	return false
}

func (x *LeagueSettings) GetTotalRounds() uint32 {
	if x != nil {
		return x.TotalRounds
	}
	return 0
}

func (x *LeagueSettings) GetPointsPerReception() float32 {
	if x != nil {
		return x.PointsPerReception
	}
	return 0
}

func (x *LeagueSettings) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type PlayerSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AllowedPlayerPositions []string `protobuf:"bytes,2,rep,name=allowed_player_positions,json=allowedPlayerPositions,proto3" json:"allowed_player_positions,omitempty"`
	AssignedPlayerId       string   `protobuf:"bytes,3,opt,name=assigned_player_id,json=assignedPlayerId,proto3" json:"assigned_player_id,omitempty"`
}

func (x *PlayerSlot) Reset() {
	*x = PlayerSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSlot) ProtoMessage() {}

func (x *PlayerSlot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSlot.ProtoReflect.Descriptor instead.
func (*PlayerSlot) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerSlot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerSlot) GetAllowedPlayerPositions() []string {
	if x != nil {
		return x.AllowedPlayerPositions
	}
	return nil
}

func (x *PlayerSlot) GetAssignedPlayerId() string {
	if x != nil {
		return x.AssignedPlayerId
	}
	return ""
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName         string        `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	AllowedPositions []string      `protobuf:"bytes,3,rep,name=allowed_positions,json=allowedPositions,proto3" json:"allowed_positions,omitempty"`
	ProfessionalTeam string        `protobuf:"bytes,4,opt,name=professional_team,json=professionalTeam,proto3" json:"professional_team,omitempty"`
	PlayerByeWeek    uint32        `protobuf:"varint,5,opt,name=player_bye_week,json=playerByeWeek,proto3" json:"player_bye_week,omitempty"`
	Rank             uint32        `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	Tier             uint32        `protobuf:"varint,7,opt,name=tier,proto3" json:"tier,omitempty"`
	PositionRank     uint32        `protobuf:"varint,8,opt,name=position_rank,json=positionRank,proto3" json:"position_rank,omitempty"`
	PositionTier     uint32        `protobuf:"varint,9,opt,name=position_tier,json=positionTier,proto3" json:"position_tier,omitempty"`
	Status           *PlayerStatus `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	GsisId           string        `protobuf:"bytes,11,opt,name=gsis_id,json=gsisId,proto3" json:"gsis_id,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Player) GetAllowedPositions() []string {
	if x != nil {
		return x.AllowedPositions
	}
	return nil
}

func (x *Player) GetProfessionalTeam() string {
	if x != nil {
		return x.ProfessionalTeam
	}
	return ""
}

func (x *Player) GetPlayerByeWeek() uint32 {
	if x != nil {
		return x.PlayerByeWeek
	}
	return 0
}

func (x *Player) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Player) GetTier() uint32 {
	if x != nil {
		return x.Tier
	}
	return 0
}

func (x *Player) GetPositionRank() uint32 {
	if x != nil {
		return x.PositionRank
	}
	return 0
}

func (x *Player) GetPositionTier() uint32 {
	if x != nil {
		return x.PositionTier
	}
	return 0
}

func (x *Player) GetStatus() *PlayerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Player) GetGsisId() string {
	if x != nil {
		return x.GsisId
	}
	return ""
}

type PlayerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Availability         PlayerStatus_Availability `protobuf:"varint,1,opt,name=availability,proto3,enum=PlayerStatus_Availability" json:"availability,omitempty"`
	PickChosen           uint32                    `protobuf:"varint,2,opt,name=pick_chosen,json=pickChosen,proto3" json:"pick_chosen,omitempty"`
	CurrentFantasyTeamId string                    `protobuf:"bytes,3,opt,name=current_fantasy_team_id,json=currentFantasyTeamId,proto3" json:"current_fantasy_team_id,omitempty"`
}

func (x *PlayerStatus) Reset() {
	*x = PlayerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatus) ProtoMessage() {}

func (x *PlayerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatus.ProtoReflect.Descriptor instead.
func (*PlayerStatus) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerStatus) GetAvailability() PlayerStatus_Availability {
	if x != nil {
		return x.Availability
	}
	return PlayerStatus_AVAILABLE
}

func (x *PlayerStatus) GetPickChosen() uint32 {
	if x != nil {
		return x.PickChosen
	}
	return 0
}

func (x *PlayerStatus) GetCurrentFantasyTeamId() string {
	if x != nil {
		return x.CurrentFantasyTeamId
	}
	return ""
}

type Bot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SourceType         Bot_Source `protobuf:"varint,2,opt,name=source_type,json=sourceType,proto3,enum=Bot_Source" json:"source_type,omitempty"`
	SourceRepoUsername string     `protobuf:"bytes,3,opt,name=source_repo_username,json=sourceRepoUsername,proto3" json:"source_repo_username,omitempty"`
	SourceRepoName     string     `protobuf:"bytes,4,opt,name=source_repo_name,json=sourceRepoName,proto3" json:"source_repo_name,omitempty"`
	SourcePath         string     `protobuf:"bytes,5,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	FantasyTeamId      string     `protobuf:"bytes,6,opt,name=fantasy_team_id,json=fantasyTeamId,proto3" json:"fantasy_team_id,omitempty"`
	EnvPath            string     `protobuf:"bytes,7,opt,name=env_path,json=envPath,proto3" json:"env_path,omitempty"`
}

func (x *Bot) Reset() {
	*x = Bot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bot) ProtoMessage() {}

func (x *Bot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bot.ProtoReflect.Descriptor instead.
func (*Bot) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *Bot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bot) GetSourceType() Bot_Source {
	if x != nil {
		return x.SourceType
	}
	return Bot_LOCAL
}

func (x *Bot) GetSourceRepoUsername() string {
	if x != nil {
		return x.SourceRepoUsername
	}
	return ""
}

func (x *Bot) GetSourceRepoName() string {
	if x != nil {
		return x.SourceRepoName
	}
	return ""
}

func (x *Bot) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *Bot) GetFantasyTeamId() string {
	if x != nil {
		return x.FantasyTeamId
	}
	return ""
}

func (x *Bot) GetEnvPath() string {
	if x != nil {
		return x.EnvPath
	}
	return ""
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players          []*Player       `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	Teams            []*FantasyTeam  `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	LeagueSettings   *LeagueSettings `protobuf:"bytes,3,opt,name=league_settings,json=leagueSettings,proto3" json:"league_settings,omitempty"`
	CurrentBotTeamId string          `protobuf:"bytes,4,opt,name=current_bot_team_id,json=currentBotTeamId,proto3" json:"current_bot_team_id,omitempty"`
	CurrentDraftPick uint32          `protobuf:"varint,5,opt,name=current_draft_pick,json=currentDraftPick,proto3" json:"current_draft_pick,omitempty"`
}

func (x *GameState) Reset() {
	*x = GameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{6}
}

func (x *GameState) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameState) GetTeams() []*FantasyTeam {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *GameState) GetLeagueSettings() *LeagueSettings {
	if x != nil {
		return x.LeagueSettings
	}
	return nil
}

func (x *GameState) GetCurrentBotTeamId() string {
	if x != nil {
		return x.CurrentBotTeamId
	}
	return ""
}

func (x *GameState) GetCurrentDraftPick() uint32 {
	if x != nil {
		return x.CurrentDraftPick
	}
	return 0
}

type DraftSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
}

func (x *DraftSelection) Reset() {
	*x = DraftSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DraftSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftSelection) ProtoMessage() {}

func (x *DraftSelection) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftSelection.ProtoReflect.Descriptor instead.
func (*DraftSelection) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{7}
}

func (x *DraftSelection) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type AttemptedFantasyActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddDropSelections []*AddDropSelection `protobuf:"bytes,1,rep,name=add_drop_selections,json=addDropSelections,proto3" json:"add_drop_selections,omitempty"`
}

func (x *AttemptedFantasyActions) Reset() {
	*x = AttemptedFantasyActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttemptedFantasyActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttemptedFantasyActions) ProtoMessage() {}

func (x *AttemptedFantasyActions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttemptedFantasyActions.ProtoReflect.Descriptor instead.
func (*AttemptedFantasyActions) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{8}
}

func (x *AttemptedFantasyActions) GetAddDropSelections() []*AddDropSelection {
	if x != nil {
		return x.AddDropSelections
	}
	return nil
}

type AddDropSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerToDropId string `protobuf:"bytes,1,opt,name=player_to_drop_id,json=playerToDropId,proto3" json:"player_to_drop_id,omitempty"`
	PlayerToAddId  string `protobuf:"bytes,2,opt,name=player_to_add_id,json=playerToAddId,proto3" json:"player_to_add_id,omitempty"`
}

func (x *AddDropSelection) Reset() {
	*x = AddDropSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_common_proto_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDropSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDropSelection) ProtoMessage() {}

func (x *AddDropSelection) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_common_proto_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDropSelection.ProtoReflect.Descriptor instead.
func (*AddDropSelection) Descriptor() ([]byte, []int) {
	return file_pkg_common_proto_agent_proto_rawDescGZIP(), []int{9}
}

func (x *AddDropSelection) GetPlayerToDropId() string {
	if x != nil {
		return x.PlayerToDropId
	}
	return ""
}

func (x *AddDropSelection) GetPlayerToAddId() string {
	if x != nil {
		return x.PlayerToAddId
	}
	return ""
}

var File_pkg_common_proto_agent_proto protoreflect.FileDescriptor

var file_pkg_common_proto_agent_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f,
	0x0a, 0x0b, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x77, 0x61, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x57, 0x61, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22,
	0xef, 0x01, 0x0a, 0x0e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12,
	0x31, 0x0a, 0x0e, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x50, 0x65, 0x72, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x6e, 0x61, 0x6b, 0x65, 0x5f, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x6e,
	0x61, 0x6b, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x50, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9, 0x02, 0x0a,
	0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x65, 0x5f, 0x77, 0x65, 0x65,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x79, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x73, 0x69, 0x73, 0x49, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63,
	0x6b, 0x5f, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x70, 0x69, 0x63, 0x6b, 0x43, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x22, 0x37, 0x0a, 0x0c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x52, 0x41, 0x46, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x10, 0x02, 0x22, 0xa4, 0x02, 0x0a, 0x03, 0x42,
	0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x42, 0x6f, 0x74, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x1f, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f,
	0x43, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10,
	0x01, 0x22, 0xe9, 0x01, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x0f, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x0e, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x2d, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x5f, 0x70, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x22, 0x2d, 0x0a,
	0x0e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x17,
	0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x5f, 0x64,
	0x72, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x64, 0x64, 0x44, 0x72, 0x6f, 0x70,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x54, 0x6f, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x41, 0x64, 0x64,
	0x49, 0x64, 0x32, 0x7c, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x44, 0x72, 0x61, 0x66, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x0a, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x0f, 0x2e,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0a, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x1a, 0x18, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64,
	0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_common_proto_agent_proto_rawDescOnce sync.Once
	file_pkg_common_proto_agent_proto_rawDescData = file_pkg_common_proto_agent_proto_rawDesc
)

func file_pkg_common_proto_agent_proto_rawDescGZIP() []byte {
	file_pkg_common_proto_agent_proto_rawDescOnce.Do(func() {
		file_pkg_common_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_common_proto_agent_proto_rawDescData)
	})
	return file_pkg_common_proto_agent_proto_rawDescData
}

var file_pkg_common_proto_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_common_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_common_proto_agent_proto_goTypes = []any{
	(PlayerStatus_Availability)(0),  // 0: PlayerStatus.Availability
	(Bot_Source)(0),                 // 1: Bot.Source
	(*FantasyTeam)(nil),             // 2: FantasyTeam
	(*LeagueSettings)(nil),          // 3: LeagueSettings
	(*PlayerSlot)(nil),              // 4: PlayerSlot
	(*Player)(nil),                  // 5: Player
	(*PlayerStatus)(nil),            // 6: PlayerStatus
	(*Bot)(nil),                     // 7: Bot
	(*GameState)(nil),               // 8: GameState
	(*DraftSelection)(nil),          // 9: DraftSelection
	(*AttemptedFantasyActions)(nil), // 10: AttemptedFantasyActions
	(*AddDropSelection)(nil),        // 11: AddDropSelection
}
var file_pkg_common_proto_agent_proto_depIdxs = []int32{
	4,  // 0: LeagueSettings.slots_per_team:type_name -> PlayerSlot
	6,  // 1: Player.status:type_name -> PlayerStatus
	0,  // 2: PlayerStatus.availability:type_name -> PlayerStatus.Availability
	1,  // 3: Bot.source_type:type_name -> Bot.Source
	5,  // 4: GameState.players:type_name -> Player
	2,  // 5: GameState.teams:type_name -> FantasyTeam
	3,  // 6: GameState.league_settings:type_name -> LeagueSettings
	11, // 7: AttemptedFantasyActions.add_drop_selections:type_name -> AddDropSelection
	8,  // 8: AgentService.DraftPlayer:input_type -> GameState
	8,  // 9: AgentService.SubmitFantasyActions:input_type -> GameState
	9,  // 10: AgentService.DraftPlayer:output_type -> DraftSelection
	10, // 11: AgentService.SubmitFantasyActions:output_type -> AttemptedFantasyActions
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_common_proto_agent_proto_init() }
func file_pkg_common_proto_agent_proto_init() {
	if File_pkg_common_proto_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_common_proto_agent_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FantasyTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*LeagueSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Bot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DraftSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AttemptedFantasyActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_common_proto_agent_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AddDropSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_common_proto_agent_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_common_proto_agent_proto_goTypes,
		DependencyIndexes: file_pkg_common_proto_agent_proto_depIdxs,
		EnumInfos:         file_pkg_common_proto_agent_proto_enumTypes,
		MessageInfos:      file_pkg_common_proto_agent_proto_msgTypes,
	}.Build()
	File_pkg_common_proto_agent_proto = out.File
	file_pkg_common_proto_agent_proto_rawDesc = nil
	file_pkg_common_proto_agent_proto_goTypes = nil
	file_pkg_common_proto_agent_proto_depIdxs = nil
}
